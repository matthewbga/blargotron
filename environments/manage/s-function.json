{
  "name": "environments-manage",
  "runtime": "python2.7",
  "description": "Serverless Lambda function for project: blargotron",
  "customName": false,
  "customRole": false,
  "handler": "environments/manage/handler.handler",
  "timeout": 300,
  "memorySize": 1024,
  "authorizer": {},
  "custom": {
    "excludePatterns": [".git/", "amis/", "blargs/", "instances/"],
    "includePaths": [
      "../../shared/generator.py",
      "../../shared/util.py",
      "../../vendored/troposphere"
    ]
  },
  "endpoints": [
    {
      "path": "environments/new",
      "method": "POST",
      "type": "AWS",
      "authorizationType": "none",
      "authorizerFunction": false,
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestTemplates": "$${apiGatewayRequestTemplate}",
      "responses": {
        "400": {
          "statusCode": "400"
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {},
          "responseModels": {
            "application/json;charset=UTF-8": "Empty"
          },
          "responseTemplates": {
            "application/json;charset=UTF-8": ""
          }
        }
      }
    },
    {
      "path": "environments/update",
      "method": "PUT",
      "type": "AWS",
      "authorizationType": "none",
      "authorizerFunction": false,
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestTemplates": "$${apiGatewayRequestTemplate}",
      "responses": {
        "400": {
          "statusCode": "400"
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {},
          "responseModels": {
            "application/json;charset=UTF-8": "Empty"
          },
          "responseTemplates": {
            "application/json;charset=UTF-8": ""
          }
        }
      }
    }
  ],
  "events": [
    {
      "name" : "environments-manage-sns",
      "type": "sns",
      "config": {
        "topicName": "BlargotronMain"
      }
    }
  ],
  "environment": {
    "SERVERLESS_PROJECT": "${project}",
    "SERVERLESS_STAGE": "${stage}",
    "SERVERLESS_REGION": "${region}"
  },
  "vpc": {
    "securityGroupIds": [],
    "subnetIds": []
  }
}